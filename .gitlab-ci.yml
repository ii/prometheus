stages:
  - build
  - package
  - release

before_script:
  - export CI_COMMIT_SHA_SHORT=$(echo ${CI_COMMIT_SHA} | cut -c -8)

compile:
  image: golang:1.8.1
  stage: build
  script:
    - ls -lah
    - ln -s /builds /go/src/github.com
    - cd /go/src/github.com/prometheus/prometheus
    - make -j $(getconf _NPROCESSORS_ONLN) build
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    untracked: true
    expire_in: 4 weeks

tar:
  stage: package
  image: golang:1.8.1
  script:
    - make tarball
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - "*tar.gz"

container:
  stage: package
  image: docker:17.05.0
  script:
    - IMAGE_TAG=${CI_COMMIT_REF_NAME}.${CI_COMMIT_SHA_SHORT}.${CI_JOB_ID}
    - cd /builds/prometheus/prometheus
    - docker login -u "gitlab-ci-token" -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker build -t "$CI_REGISTRY_IMAGE:$IMAGE_TAG" .
    - docker push "$CI_REGISTRY_IMAGE:$IMAGE_TAG"
    - echo server.image.repository=$CI_REGISTRY_IMAGE | tee release.properties
    - echo server.image.tag=$IMAGE_TAG | tee -a release.properties
  dependencies:
    - compile
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - release.properties

release:
  stage: release
  image: golang:1.8.1
  script:
    - echo combining pipeline artifacts into a release 
  dependencies:
    - container
    - tar
  artifacts:
    name: "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
    paths:
      - release.properties
      - "*tar.gz"
